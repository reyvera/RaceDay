[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar meteorInstall = Package['modules-runtime'].meteorInstall;\n\n/* Package-scope variables */\nvar Buffer, process;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"modules\":{\"client.js\":[\"./install-packages.js\",\"./stubs.js\",\"./buffer.js\",\"./process.js\",\"reify/lib/runtime\",\"./css\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/client.js                                                //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nrequire(\"./install-packages.js\");                                            // 1\nrequire(\"./stubs.js\");                                                       // 2\nrequire(\"./buffer.js\");                                                      // 3\nrequire(\"./process.js\");                                                     // 4\nrequire(\"reify/lib/runtime\").enable(module.constructor);                     // 5\n                                                                             // 6\nexports.addStyles = require(\"./css\").addStyles;                              // 7\n                                                                             // 8\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"buffer.js\":[\"buffer\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/buffer.js                                                //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\ntry {                                                                        // 1\n  Buffer = global.Buffer || require(\"buffer\").Buffer;                        // 2\n} catch (noBuffer) {}                                                        // 3\n                                                                             // 4\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"css.js\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/css.js                                                   //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar doc = document;                                                          // 1\nvar head = doc.getElementsByTagName(\"head\").item(0);                         // 2\n                                                                             // 3\nexports.addStyles = function (css) {                                         // 4\n  var style = doc.createElement(\"style\");                                    // 5\n                                                                             // 6\n  style.setAttribute(\"type\", \"text/css\");                                    // 7\n                                                                             // 8\n  // https://msdn.microsoft.com/en-us/library/ms535871(v=vs.85).aspx         // 9\n  var internetExplorerSheetObject =                                          // 10\n    style.sheet || // Edge/IE11.                                             // 11\n    style.styleSheet; // Older IEs.                                          // 12\n                                                                             // 13\n  if (internetExplorerSheetObject) {                                         // 14\n    internetExplorerSheetObject.cssText = css;                               // 15\n  } else {                                                                   // 16\n    style.appendChild(doc.createTextNode(css));                              // 17\n  }                                                                          // 18\n                                                                             // 19\n  return head.appendChild(style);                                            // 20\n};                                                                           // 21\n                                                                             // 22\n///////////////////////////////////////////////////////////////////////////////\n\n},\"install-packages.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/install-packages.js                                      //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nfunction install(name, mainModule) {                                         // 1\n  var meteorDir = {};                                                        // 2\n                                                                             // 3\n  // Given a package name <name>, install a stub module in the               // 4\n  // /node_modules/meteor directory called <name>.js, so that                // 5\n  // require.resolve(\"meteor/<name>\") will always return                     // 6\n  // /node_modules/meteor/<name>.js instead of something like                // 7\n  // /node_modules/meteor/<name>/index.js, in the rare but possible event    // 8\n  // that the package contains a file called index.js (#6590).               // 9\n                                                                             // 10\n  if (mainModule) {                                                          // 11\n    meteorDir[name + \".js\"] = [mainModule, function (require, e, module) {   // 12\n      module.exports = require(mainModule);                                  // 13\n    }];                                                                      // 14\n  } else {                                                                   // 15\n    // back compat with old Meteor packages                                  // 16\n    meteorDir[name + \".js\"] = function (r, e, module) {                      // 17\n      module.exports = Package[name];                                        // 18\n    };                                                                       // 19\n  }                                                                          // 20\n                                                                             // 21\n  meteorInstall({                                                            // 22\n    node_modules: {                                                          // 23\n      meteor: meteorDir                                                      // 24\n    }                                                                        // 25\n  });                                                                        // 26\n}                                                                            // 27\n                                                                             // 28\n// This file will be modified during computeJsOutputFilesMap to include      // 29\n// install(<name>) calls for every Meteor package.                           // 30\n                                                                             // 31\ninstall(\"underscore\");                                                       // 32\ninstall(\"meteor\");                                                           // 33\ninstall(\"meteor-base\");                                                      // 34\ninstall(\"mobile-experience\");                                                // 35\ninstall(\"babel-compiler\");                                                   // 36\ninstall(\"ecmascript\");                                                       // 37\ninstall(\"base64\");                                                           // 38\ninstall(\"ejson\");                                                            // 39\ninstall(\"id-map\");                                                           // 40\ninstall(\"ordered-dict\");                                                     // 41\ninstall(\"tracker\");                                                          // 42\ninstall(\"modules-runtime\");                                                  // 43\ninstall(\"modules\", \"meteor/modules/client.js\");                              // 44\ninstall(\"es5-shim\", \"meteor/es5-shim/client.js\");                            // 45\ninstall(\"promise\", \"meteor/promise/client.js\");                              // 46\ninstall(\"ecmascript-runtime\", \"meteor/ecmascript-runtime/runtime.js\");       // 47\ninstall(\"babel-runtime\");                                                    // 48\ninstall(\"random\");                                                           // 49\ninstall(\"mongo-id\");                                                         // 50\ninstall(\"diff-sequence\");                                                    // 51\ninstall(\"geojson-utils\", \"meteor/geojson-utils/main.js\");                    // 52\ninstall(\"minimongo\");                                                        // 53\ninstall(\"check\", \"meteor/check/match.js\");                                   // 54\ninstall(\"retry\");                                                            // 55\ninstall(\"ddp-common\");                                                       // 56\ninstall(\"reload\");                                                           // 57\ninstall(\"ddp-client\");                                                       // 58\ninstall(\"ddp\");                                                              // 59\ninstall(\"ddp-server\");                                                       // 60\ninstall(\"allow-deny\");                                                       // 61\ninstall(\"insecure\");                                                         // 62\ninstall(\"mongo\");                                                            // 63\ninstall(\"blaze-html-templates\");                                             // 64\ninstall(\"reactive-var\");                                                     // 65\ninstall(\"jquery\", \"meteor/jquery/main.js\");                                  // 66\ninstall(\"standard-minifier-css\");                                            // 67\ninstall(\"standard-minifier-js\");                                             // 68\ninstall(\"autopublish\");                                                      // 69\ninstall(\"webapp\");                                                           // 70\ninstall(\"livedata\");                                                         // 71\ninstall(\"hot-code-push\");                                                    // 72\ninstall(\"deps\");                                                             // 73\ninstall(\"htmljs\");                                                           // 74\ninstall(\"observe-sequence\");                                                 // 75\ninstall(\"blaze\");                                                            // 76\ninstall(\"spacebars\");                                                        // 77\ninstall(\"templating\");                                                       // 78\ninstall(\"launch-screen\");                                                    // 79\ninstall(\"ui\");                                                               // 80\ninstall(\"autoupdate\");                                                       // 81\n                                                                             // 82\n///////////////////////////////////////////////////////////////////////////////\n\n},\"process.js\":[\"process\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/process.js                                               //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\ntry {                                                                        // 1\n  // The application can run `npm install process` to provide its own        // 2\n  // process stub; otherwise this module will provide a partial stub.        // 3\n  process = global.process || require(\"process\");                            // 4\n} catch (noProcess) {                                                        // 5\n  process = {};                                                              // 6\n}                                                                            // 7\n                                                                             // 8\nif (Meteor.isServer) {                                                       // 9\n  // Make require(\"process\") work on the server in all versions of Node.     // 10\n  meteorInstall({                                                            // 11\n    node_modules: {                                                          // 12\n      \"process.js\": function (r, e, module) {                                // 13\n        module.exports = process;                                            // 14\n      }                                                                      // 15\n    }                                                                        // 16\n  });                                                                        // 17\n} else {                                                                     // 18\n  process.platform = \"browser\";                                              // 19\n  process.nextTick = process.nextTick || Meteor._setImmediate;               // 20\n}                                                                            // 21\n                                                                             // 22\nif (typeof process.env !== \"object\") {                                       // 23\n  process.env = {};                                                          // 24\n}                                                                            // 25\n                                                                             // 26\n_.extend(process.env, meteorEnv);                                            // 27\n                                                                             // 28\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"stubs.js\":[\"meteor-node-stubs\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/stubs.js                                                 //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\ntry {                                                                        // 1\n  // When meteor-node-stubs is installed in the application's root           // 2\n  // node_modules directory, requiring it here installs aliases for stubs    // 3\n  // for all Node built-in modules, such as fs, util, and http.              // 4\n  require(\"meteor-node-stubs\");                                              // 5\n} catch (noStubs) {}                                                         // 6\n                                                                             // 7\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"node_modules\":{\"reify\":{\"lib\":{\"runtime.js\":[\"./entry.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// node_modules/meteor/modules/node_modules/reify/lib/runtime.js             //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar Entry = require(\"./entry.js\").Entry;                                     // 1\n                                                                             // 2\nexports.enable = function (Module) {                                         // 3\n  var Mp = Module.prototype;                                                 // 4\n                                                                             // 5\n  if (typeof Mp.import === \"function\" &&                                     // 6\n      typeof Mp.export === \"function\") {                                     // 7\n    // If the Mp.{import,export} methods have already been                   // 8\n    // defined, abandon reification immediately.                             // 9\n    return Module;                                                           // 10\n  }                                                                          // 11\n                                                                             // 12\n  // Platform-specific code should implement this method however             // 13\n  // appropriate. Module.prototype.resolve(id) should return an absolute     // 14\n  // version of the given module identifier, like require.resolve.           // 15\n  Mp.resolve = Mp.resolve || function resolve(id) {                          // 16\n    throw new Error(\"Module.prototype.resolve not implemented\");             // 17\n  };                                                                         // 18\n                                                                             // 19\n  // Platform-specific code should find a way to call this method whenever   // 20\n  // the module system is about to return module.exports from require. This  // 21\n  // might happen more than once per module, in case of dependency cycles,   // 22\n  // so we want Module.prototype.runModuleSetters to run each time.          // 23\n  Mp.runModuleSetters = function runModuleSetters() {                        // 24\n    var entry = Entry.get(this.id);                                          // 25\n    if (entry) {                                                             // 26\n      entry.runModuleSetters(this);                                          // 27\n    }                                                                        // 28\n  };                                                                         // 29\n                                                                             // 30\n  function setESModule(module) {                                             // 31\n    var exports = module.exports;                                            // 32\n    if (exports && typeof exports === \"object\") {                            // 33\n      exports.__esModule = true;                                             // 34\n    }                                                                        // 35\n  }                                                                          // 36\n                                                                             // 37\n  Mp.import = function (id, setters) {                                       // 38\n    var module = this;                                                       // 39\n    setESModule(module);                                                     // 40\n                                                                             // 41\n    var absoluteId = module.resolve(id);                                     // 42\n                                                                             // 43\n    if (setters && typeof setters === \"object\") {                            // 44\n      var entry = Entry.getOrCreate(absoluteId);                             // 45\n      entry.addSetters(setters);                                             // 46\n      entry.addParent(module);                                               // 47\n    }                                                                        // 48\n                                                                             // 49\n    var countBefore = entry && entry.runCount;                               // 50\n    var exports = typeof module.require === \"function\"                       // 51\n      ? module.require(absoluteId)                                           // 52\n      : require(absoluteId);                                                 // 53\n                                                                             // 54\n    if (entry && entry.runCount === countBefore) {                           // 55\n      // If require(absoluteId) didn't run any setters for this entry,       // 56\n      // perhaps because it's not the first time this module has been        // 57\n      // required, run the setters now using an object that passes as the    // 58\n      // real module object.                                                 // 59\n      entry.runModuleSetters({                                               // 60\n        id: absoluteId,                                                      // 61\n        exports: exports,                                                    // 62\n        getExportByName: Mp.getExportByName                                  // 63\n      });                                                                    // 64\n    }                                                                        // 65\n  };                                                                         // 66\n                                                                             // 67\n  // Register a getter function for a local variable in the scope of an      // 68\n  // export statement.                                                       // 69\n  Mp.export = function (id, getter) {                                        // 70\n    var module = this;                                                       // 71\n    setESModule(module);                                                     // 72\n                                                                             // 73\n    var entry = Entry.getOrCreate(module.id);                                // 74\n                                                                             // 75\n    if (typeof id === \"string\") {                                            // 76\n      entry.addGetter(id, getter);                                           // 77\n    } else if (typeof id === \"object\") {                                     // 78\n      entry.addGetters(id);                                                  // 79\n    }                                                                        // 80\n                                                                             // 81\n    if (module.loaded) {                                                     // 82\n      // If the module has already been evaluated, then we need to trigger   // 83\n      // another round of entry.runModuleSetters calls, which begins by      // 84\n      // calling entry.runModuleGetters(module).                             // 85\n      entry.runModuleSetters(module);                                        // 86\n    } else {                                                                 // 87\n      // If the module has not yet finished evaluating, then we only want    // 88\n      // to call entry.runModuleGetters(module) to update module.exports.    // 89\n      entry.runModuleGetters(module);                                        // 90\n    }                                                                        // 91\n  };                                                                         // 92\n                                                                             // 93\n  // This method can be overridden by client code to implement custom export\n  // naming logic. The current implementation works well with Babel's        // 95\n  // __esModule convention.                                                  // 96\n  Mp.getExportByName = function (name) {                                     // 97\n    var exports = this.exports;                                              // 98\n                                                                             // 99\n    if (name === \"*\") {                                                      // 100\n      return exports;                                                        // 101\n    }                                                                        // 102\n                                                                             // 103\n    if (name === \"default\" &&                                                // 104\n        ! (exports &&                                                        // 105\n           typeof exports === \"object\" &&                                    // 106\n           exports.__esModule &&                                             // 107\n           \"default\" in exports)) {                                          // 108\n      return exports;                                                        // 109\n    }                                                                        // 110\n                                                                             // 111\n    return exports && exports[name];                                         // 112\n  };                                                                         // 113\n                                                                             // 114\n  return Module;                                                             // 115\n};                                                                           // 116\n                                                                             // 117\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"entry.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// node_modules/meteor/modules/node_modules/reify/lib/entry.js               //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar hasOwn = Object.prototype.hasOwnProperty;                                // 1\nvar entryMap = Object.create(null);                                          // 2\n                                                                             // 3\nfunction Entry(id) {                                                         // 4\n  // Same as module.id for this module.                                      // 5\n  this.id = id;                                                              // 6\n  // The number of times this.runModuleSetters has been called.              // 7\n  this.runCount = 0;                                                         // 8\n  // Map from parent module identifiers to parent module objects.            // 9\n  this.parents = Object.create(null);                                        // 10\n  // Setters for assigning to local variables in parent modules.             // 11\n  this.setters = Object.create(null);                                        // 12\n  // Getters for local variables exported from this module.                  // 13\n  this.getters = Object.create(null);                                        // 14\n}                                                                            // 15\n                                                                             // 16\nvar Ep = Entry.prototype;                                                    // 17\n                                                                             // 18\nEntry.get = function (id) {                                                  // 19\n  return entryMap[id] || null;                                               // 20\n};                                                                           // 21\n                                                                             // 22\nEntry.getOrCreate = function (id) {                                          // 23\n  return entryMap[id] = entryMap[id] || new Entry(id);                       // 24\n};                                                                           // 25\n                                                                             // 26\nEp.addParent = function (module) {                                           // 27\n  this.parents[module.id] = module;                                          // 28\n};                                                                           // 29\n                                                                             // 30\nEp.addSetters = function (setters) {                                         // 31\n  Object.keys(setters).forEach(function (name) {                             // 32\n    this.addSetter(name, setters[name]);                                     // 33\n  }, this);                                                                  // 34\n};                                                                           // 35\n                                                                             // 36\nEp.addSetter = function (name, setter) {                                     // 37\n  if (typeof name === \"string\" &&                                            // 38\n      typeof setter === \"function\" &&                                        // 39\n      // Ignore any requests for the exports.__esModule property.\"           // 40\n      name !== \"__esModule\") {                                               // 41\n    (this.setters[name] =                                                    // 42\n     this.setters[name] || []                                                // 43\n    ).push(setter);                                                          // 44\n  }                                                                          // 45\n};                                                                           // 46\n                                                                             // 47\nEp.addGetters = function (getters) {                                         // 48\n  Object.keys(getters).forEach(function (name) {                             // 49\n    this.addGetter(name, getters[name]);                                     // 50\n  }, this);                                                                  // 51\n};                                                                           // 52\n                                                                             // 53\nEp.addGetter = function (name, getter) {                                     // 54\n  if (typeof name === \"string\" &&                                            // 55\n      typeof getter === \"function\" &&                                        // 56\n      // Ignore any requests for the exports.__esModule property.\"           // 57\n      name !== \"__esModule\") {                                               // 58\n    // Should this throw if hasOwn.call(this.getters, name)?                 // 59\n    this.getters[name] = getter;                                             // 60\n  }                                                                          // 61\n};                                                                           // 62\n                                                                             // 63\nfunction runModuleSetters(module) {                                          // 64\n  var entry = entryMap[module.id];                                           // 65\n  if (entry) {                                                               // 66\n    entry.runModuleSetters(module);                                          // 67\n  }                                                                          // 68\n}                                                                            // 69\n                                                                             // 70\nEp.runModuleGetters = function (module) {                                    // 71\n  var entry = this;                                                          // 72\n  Object.keys(entry.getters).forEach(function (name) {                       // 73\n    // Make sure we update module.exports[name] with the current value so    // 74\n    // that CommonJS require calls remain consistent with module.import.     // 75\n    module.exports[name] = entry.getters[name].call(module);                 // 76\n  });                                                                        // 77\n};                                                                           // 78\n                                                                             // 79\nEp.runModuleSetters = function (module) {                                    // 80\n  var entry = this;                                                          // 81\n  var shouldRunParentSetters = false;                                        // 82\n                                                                             // 83\n  this.runModuleGetters(module);                                             // 84\n                                                                             // 85\n  Object.keys(entry.setters).forEach(function (name) {                       // 86\n    var value = module.getExportByName(name);                                // 87\n                                                                             // 88\n    entry.setters[name].forEach(function (setter) {                          // 89\n      if (name === \"*\") {                                                    // 90\n        Object.keys(value).forEach(function (name) {                         // 91\n          if (name !== \"__esModule\" &&                                       // 92\n              callSetter(module, setter, name, value[name]) === true) {      // 93\n            shouldRunParentSetters = true;                                   // 94\n          }                                                                  // 95\n        });                                                                  // 96\n      } else if (callSetter(module, setter, name, value) === true) {         // 97\n        shouldRunParentSetters = true;                                       // 98\n      }                                                                      // 99\n    });                                                                      // 100\n  });                                                                        // 101\n                                                                             // 102\n  ++entry.runCount;                                                          // 103\n                                                                             // 104\n  if (shouldRunParentSetters) {                                              // 105\n    entry.runParentSetters();                                                // 106\n  }                                                                          // 107\n};                                                                           // 108\n                                                                             // 109\nfunction callSetter(module, setter, name, value) {                           // 110\n  setter.last = setter.last || Object.create(null);                          // 111\n  if (! hasOwn.call(setter.last, name) ||                                    // 112\n      value !== setter.last[name]) {                                         // 113\n    return setter.call(                                                      // 114\n      module,                                                                // 115\n      setter.last[name] = value,                                             // 116\n      name                                                                   // 117\n    );                                                                       // 118\n  }                                                                          // 119\n}                                                                            // 120\n                                                                             // 121\nEp.runParentSetters = function () {                                          // 122\n  var parents = this.parents;                                                // 123\n  Object.keys(parents).forEach(function (id) {                               // 124\n    runModuleSetters(parents[id]);                                           // 125\n  });                                                                        // 126\n};                                                                           // 127\n                                                                             // 128\nexports.Entry = Entry;                                                       // 129\n                                                                             // 130\n///////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/modules/client.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.modules = exports, {\n  meteorInstall: meteorInstall,\n  Buffer: Buffer,\n  process: process\n});\n\n})();\n","servePath":"/packages/modules.js","sourceMap":{"version":3,"sources":["/packages/modules/client.js","/packages/modules/buffer.js","/packages/modules/css.js","/packages/modules/install-packages.js","/packages/modules/process.js","/packages/modules/stubs.js","node_modules/meteor/modules/node_modules/reify/lib/runtime.js","node_modules/meteor/modules/node_modules/reify/lib/entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iF;;;;;;;;;;;ACPA;AACA;AACA;AACA,iF;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kF;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kF;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kF;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA,imF;;;;;;;;;;;ACpmF","file":"/packages/modules.js","sourcesContent":["require(\"./install-packages.js\");\nrequire(\"./stubs.js\");\nrequire(\"./buffer.js\");\nrequire(\"./process.js\");\nrequire(\"reify/lib/runtime\").enable(module.constructor);\n\nexports.addStyles = require(\"./css\").addStyles;\n","try {\n  Buffer = global.Buffer || require(\"buffer\").Buffer;\n} catch (noBuffer) {}\n","var doc = document;\nvar head = doc.getElementsByTagName(\"head\").item(0);\n\nexports.addStyles = function (css) {\n  var style = doc.createElement(\"style\");\n\n  style.setAttribute(\"type\", \"text/css\");\n\n  // https://msdn.microsoft.com/en-us/library/ms535871(v=vs.85).aspx\n  var internetExplorerSheetObject =\n    style.sheet || // Edge/IE11.\n    style.styleSheet; // Older IEs.\n\n  if (internetExplorerSheetObject) {\n    internetExplorerSheetObject.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n\n  return head.appendChild(style);\n};\n","function install(name, mainModule) {\n  var meteorDir = {};\n\n  // Given a package name <name>, install a stub module in the\n  // /node_modules/meteor directory called <name>.js, so that\n  // require.resolve(\"meteor/<name>\") will always return\n  // /node_modules/meteor/<name>.js instead of something like\n  // /node_modules/meteor/<name>/index.js, in the rare but possible event\n  // that the package contains a file called index.js (#6590).\n\n  if (mainModule) {\n    meteorDir[name + \".js\"] = [mainModule, function (require, e, module) {\n      module.exports = require(mainModule);\n    }];\n  } else {\n    // back compat with old Meteor packages\n    meteorDir[name + \".js\"] = function (r, e, module) {\n      module.exports = Package[name];\n    };\n  }\n\n  meteorInstall({\n    node_modules: {\n      meteor: meteorDir\n    }\n  });\n}\n\n// This file will be modified during computeJsOutputFilesMap to include\n// install(<name>) calls for every Meteor package.\n\ninstall(\"underscore\");\ninstall(\"meteor\");\ninstall(\"meteor-base\");\ninstall(\"mobile-experience\");\ninstall(\"babel-compiler\");\ninstall(\"ecmascript\");\ninstall(\"base64\");\ninstall(\"ejson\");\ninstall(\"id-map\");\ninstall(\"ordered-dict\");\ninstall(\"tracker\");\ninstall(\"modules-runtime\");\ninstall(\"modules\", \"meteor/modules/client.js\");\ninstall(\"es5-shim\", \"meteor/es5-shim/client.js\");\ninstall(\"promise\", \"meteor/promise/client.js\");\ninstall(\"ecmascript-runtime\", \"meteor/ecmascript-runtime/runtime.js\");\ninstall(\"babel-runtime\");\ninstall(\"random\");\ninstall(\"mongo-id\");\ninstall(\"diff-sequence\");\ninstall(\"geojson-utils\", \"meteor/geojson-utils/main.js\");\ninstall(\"minimongo\");\ninstall(\"check\", \"meteor/check/match.js\");\ninstall(\"retry\");\ninstall(\"ddp-common\");\ninstall(\"reload\");\ninstall(\"ddp-client\");\ninstall(\"ddp\");\ninstall(\"ddp-server\");\ninstall(\"allow-deny\");\ninstall(\"insecure\");\ninstall(\"mongo\");\ninstall(\"blaze-html-templates\");\ninstall(\"reactive-var\");\ninstall(\"jquery\", \"meteor/jquery/main.js\");\ninstall(\"standard-minifier-css\");\ninstall(\"standard-minifier-js\");\ninstall(\"autopublish\");\ninstall(\"webapp\");\ninstall(\"livedata\");\ninstall(\"hot-code-push\");\ninstall(\"deps\");\ninstall(\"htmljs\");\ninstall(\"observe-sequence\");\ninstall(\"blaze\");\ninstall(\"spacebars\");\ninstall(\"templating\");\ninstall(\"launch-screen\");\ninstall(\"ui\");\ninstall(\"autoupdate\");\n","try {\n  // The application can run `npm install process` to provide its own\n  // process stub; otherwise this module will provide a partial stub.\n  process = global.process || require(\"process\");\n} catch (noProcess) {\n  process = {};\n}\n\nif (Meteor.isServer) {\n  // Make require(\"process\") work on the server in all versions of Node.\n  meteorInstall({\n    node_modules: {\n      \"process.js\": function (r, e, module) {\n        module.exports = process;\n      }\n    }\n  });\n} else {\n  process.platform = \"browser\";\n  process.nextTick = process.nextTick || Meteor._setImmediate;\n}\n\nif (typeof process.env !== \"object\") {\n  process.env = {};\n}\n\n_.extend(process.env, meteorEnv);\n","try {\n  // When meteor-node-stubs is installed in the application's root\n  // node_modules directory, requiring it here installs aliases for stubs\n  // for all Node built-in modules, such as fs, util, and http.\n  require(\"meteor-node-stubs\");\n} catch (noStubs) {}\n","var Entry = require(\"./entry.js\").Entry;\n\nexports.enable = function (Module) {\n  var Mp = Module.prototype;\n\n  if (typeof Mp.import === \"function\" &&\n      typeof Mp.export === \"function\") {\n    // If the Mp.{import,export} methods have already been\n    // defined, abandon reification immediately.\n    return Module;\n  }\n\n  // Platform-specific code should implement this method however\n  // appropriate. Module.prototype.resolve(id) should return an absolute\n  // version of the given module identifier, like require.resolve.\n  Mp.resolve = Mp.resolve || function resolve(id) {\n    throw new Error(\"Module.prototype.resolve not implemented\");\n  };\n\n  // Platform-specific code should find a way to call this method whenever\n  // the module system is about to return module.exports from require. This\n  // might happen more than once per module, in case of dependency cycles,\n  // so we want Module.prototype.runModuleSetters to run each time.\n  Mp.runModuleSetters = function runModuleSetters() {\n    var entry = Entry.get(this.id);\n    if (entry) {\n      entry.runModuleSetters(this);\n    }\n  };\n\n  function setESModule(module) {\n    var exports = module.exports;\n    if (exports && typeof exports === \"object\") {\n      exports.__esModule = true;\n    }\n  }\n\n  Mp.import = function (id, setters) {\n    var module = this;\n    setESModule(module);\n\n    var absoluteId = module.resolve(id);\n\n    if (setters && typeof setters === \"object\") {\n      var entry = Entry.getOrCreate(absoluteId);\n      entry.addSetters(setters);\n      entry.addParent(module);\n    }\n\n    var countBefore = entry && entry.runCount;\n    var exports = typeof module.require === \"function\"\n      ? module.require(absoluteId)\n      : require(absoluteId);\n\n    if (entry && entry.runCount === countBefore) {\n      // If require(absoluteId) didn't run any setters for this entry,\n      // perhaps because it's not the first time this module has been\n      // required, run the setters now using an object that passes as the\n      // real module object.\n      entry.runModuleSetters({\n        id: absoluteId,\n        exports: exports,\n        getExportByName: Mp.getExportByName\n      });\n    }\n  };\n\n  // Register a getter function for a local variable in the scope of an\n  // export statement.\n  Mp.export = function (id, getter) {\n    var module = this;\n    setESModule(module);\n\n    var entry = Entry.getOrCreate(module.id);\n\n    if (typeof id === \"string\") {\n      entry.addGetter(id, getter);\n    } else if (typeof id === \"object\") {\n      entry.addGetters(id);\n    }\n\n    if (module.loaded) {\n      // If the module has already been evaluated, then we need to trigger\n      // another round of entry.runModuleSetters calls, which begins by\n      // calling entry.runModuleGetters(module).\n      entry.runModuleSetters(module);\n    } else {\n      // If the module has not yet finished evaluating, then we only want\n      // to call entry.runModuleGetters(module) to update module.exports.\n      entry.runModuleGetters(module);\n    }\n  };\n\n  // This method can be overridden by client code to implement custom export\n  // naming logic. The current implementation works well with Babel's\n  // __esModule convention.\n  Mp.getExportByName = function (name) {\n    var exports = this.exports;\n\n    if (name === \"*\") {\n      return exports;\n    }\n\n    if (name === \"default\" &&\n        ! (exports &&\n           typeof exports === \"object\" &&\n           exports.__esModule &&\n           \"default\" in exports)) {\n      return exports;\n    }\n\n    return exports && exports[name];\n  };\n\n  return Module;\n};\n","var hasOwn = Object.prototype.hasOwnProperty;\nvar entryMap = Object.create(null);\n\nfunction Entry(id) {\n  // Same as module.id for this module.\n  this.id = id;\n  // The number of times this.runModuleSetters has been called.\n  this.runCount = 0;\n  // Map from parent module identifiers to parent module objects.\n  this.parents = Object.create(null);\n  // Setters for assigning to local variables in parent modules.\n  this.setters = Object.create(null);\n  // Getters for local variables exported from this module.\n  this.getters = Object.create(null);\n}\n\nvar Ep = Entry.prototype;\n\nEntry.get = function (id) {\n  return entryMap[id] || null;\n};\n\nEntry.getOrCreate = function (id) {\n  return entryMap[id] = entryMap[id] || new Entry(id);\n};\n\nEp.addParent = function (module) {\n  this.parents[module.id] = module;\n};\n\nEp.addSetters = function (setters) {\n  Object.keys(setters).forEach(function (name) {\n    this.addSetter(name, setters[name]);\n  }, this);\n};\n\nEp.addSetter = function (name, setter) {\n  if (typeof name === \"string\" &&\n      typeof setter === \"function\" &&\n      // Ignore any requests for the exports.__esModule property.\"\n      name !== \"__esModule\") {\n    (this.setters[name] =\n     this.setters[name] || []\n    ).push(setter);\n  }\n};\n\nEp.addGetters = function (getters) {\n  Object.keys(getters).forEach(function (name) {\n    this.addGetter(name, getters[name]);\n  }, this);\n};\n\nEp.addGetter = function (name, getter) {\n  if (typeof name === \"string\" &&\n      typeof getter === \"function\" &&\n      // Ignore any requests for the exports.__esModule property.\"\n      name !== \"__esModule\") {\n    // Should this throw if hasOwn.call(this.getters, name)?\n    this.getters[name] = getter;\n  }\n};\n\nfunction runModuleSetters(module) {\n  var entry = entryMap[module.id];\n  if (entry) {\n    entry.runModuleSetters(module);\n  }\n}\n\nEp.runModuleGetters = function (module) {\n  var entry = this;\n  Object.keys(entry.getters).forEach(function (name) {\n    // Make sure we update module.exports[name] with the current value so\n    // that CommonJS require calls remain consistent with module.import.\n    module.exports[name] = entry.getters[name].call(module);\n  });\n};\n\nEp.runModuleSetters = function (module) {\n  var entry = this;\n  var shouldRunParentSetters = false;\n\n  this.runModuleGetters(module);\n\n  Object.keys(entry.setters).forEach(function (name) {\n    var value = module.getExportByName(name);\n\n    entry.setters[name].forEach(function (setter) {\n      if (name === \"*\") {\n        Object.keys(value).forEach(function (name) {\n          if (name !== \"__esModule\" &&\n              callSetter(module, setter, name, value[name]) === true) {\n            shouldRunParentSetters = true;\n          }\n        });\n      } else if (callSetter(module, setter, name, value) === true) {\n        shouldRunParentSetters = true;\n      }\n    });\n  });\n\n  ++entry.runCount;\n\n  if (shouldRunParentSetters) {\n    entry.runParentSetters();\n  }\n};\n\nfunction callSetter(module, setter, name, value) {\n  setter.last = setter.last || Object.create(null);\n  if (! hasOwn.call(setter.last, name) ||\n      value !== setter.last[name]) {\n    return setter.call(\n      module,\n      setter.last[name] = value,\n      name\n    );\n  }\n}\n\nEp.runParentSetters = function () {\n  var parents = this.parents;\n  Object.keys(parents).forEach(function (id) {\n    runModuleSetters(parents[id]);\n  });\n};\n\nexports.Entry = Entry;\n"]}}]