{"version":3,"sources":["meteor://ðŸ’»app/client/layout/MainLayout.jsx","meteor://ðŸ’»app/client/map/LatLngForm.jsx","meteor://ðŸ’»app/client/map/MapMarkers.jsx","meteor://ðŸ’»app/client/map/MapWrapper.jsx","meteor://ðŸ’»app/client/routing/routes.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\n\nexport const MainLayout = ({content}) => (\n\t<div>\n\t\t<header>\n\t\t\t<h2>raceDay: The official athlete tracking app!</h2>\n\t\t\t<nav>\n\t\t\t\t<a href=\"/\">Map</a>\n\t\t\t</nav>\n\t\t</header>\n\t\t<main>\n\t\t\t{content}\n\t\t</main>\n\t</div>\n)\n","import React, {Component} from 'react';\n\nexport default class LatLngForm extends Component {\n\taddLocation(event) {\n\t\tevent.preventDefault();\n\n\t\tvar lat = this.refs.lat.value.trim();\n\t\tvar lng = this.refs.lng.value.trim();\n\n\t\tif(lat && lng) {\n\t\t\tMeteor.call('addLocation', lat, lng, () => {\n\t\t\t\tthis.refs.lat.value = \"\";\n\t\t\t\tthis.refs.lng.value = \"\";\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<form onSubmit={this.addLocation.bind(this)}>\n\t\t\t\t<input type=\"text\" ref=\"lat\" placeholder=\"Lat:\" />\n\t\t\t\t<input type=\"text\" ref=\"lng\" placeholder=\"Lng:\" />\n\t\t\t\t<input type=\"submit\" value=\"Add\" />\n\t\t\t</form>\n\t\t)\n\t}\n}\n","import React, {Component, PropTypes} from 'react';\n\nexport default class MapMarkers extends Component {\n\tconstructor(props) {\n    super(props);\n  }\n\n\trender() {\n    return (\n      <div className=\"myMarker\">\n        {this.props.text}\n      </div>\n    );\n  }\n}\n\nMapMarkers.propTypes = {\n\ttext: PropTypes.string,\n};\nMapMarkers.defaultProps = {};\n","import React, {Component, PropTypes} from 'react';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport controllable from 'react-controllables';\n\nimport GoogleMap from 'google-map-react';\nimport MapMarkers from './MapMarkers';\nimport LatLngForm from './LatLngForm';\n\nMarkers = new Mongo.Collection(\"markers\");\n\nexport default class MapWrapper extends TrackerReact(Component) {\n  constructor() {\n    super();\n\n\t\tthis.state = {\n\t\t\tsubscription: {\n\t\t\t\tmarkers: Meteor.subscribe(\"userMarkers\")\n\t\t\t}\n\t\t}\n  }\n\n\tcomponentDidMount() {\n\t\tif(navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t(position) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcurrentRegion: [\n          \t\tposition.coords.latitude,\n          \t\tposition.coords.longitude,\n        \t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.subscription.markers.stop();\n\t}\n\n\tcreateMapOptions() {\n\t\treturn{\n\t\t\tminZoomOverride: true,\n    \tminZoom: 2,\n\t\t}\n\t}\n\n\tmarkers() {\n\t\treturn Markers.find().fetch();\n\t}\n\n  render() {\n\t\tuserLocation = this.state.currentRegion;\n\n\t\t// Map user markers in database to their own respective <MapMarkers /> tag.\n\t\tconst myPlaces = this.markers().map(marker => {\n\t\t\tconst {...coords} = marker;\n\n\t\t\treturn (\n\t\t\t\t<MapMarkers key={marker._id}\n\t\t\t\t\t\t\t\t\t\t{...coords} />\n\t\t\t);\n\t\t});\n\n\t\tif(userLocation) {\n\t\t\treturn (\n\t\t\t\t<div className=\"mapWrapper\">\n\t\t\t\t\t<LatLngForm />\n\t\t\t\t\t<GoogleMap\n\t\t\t\t\t\tdefaultCenter={this.props.center}\n\t\t\t\t\t\tcenter={userLocation}\n\t\t\t\t\t\tdefaultZoom={this.props.zoom}\n\t\t\t\t\t\toptions={this.createMapOptions}\n\t\t\t\t\t\tbootstrapURLKeys={{ key: 'AIzaSyAh3cQ8hG1PN_ZLLC_GYP0zWhDSsYD4Mbk'}} >\n\n\t\t\t\t\t\t{myPlaces}\n\t\t\t\t\t</GoogleMap>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div className=\"mapWrapper\">\n\t\t\t\t\t<h1>Loading Map...</h1>\n\t\t\t\t\t<p>Please allow for location access to view map.</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n  }\n}\n\nMapWrapper.propTypes = {\n\tcenter: PropTypes.any,\n\tzoom: PropTypes.number,\n};\nMapWrapper.defaultProps = {\n\tcenter: [0, 0],\n\tzoom: 8,\n};\n","import React from 'react';\nimport {mount} from 'react-mounter';\n\nimport {MainLayout} from '../layout/MainLayout';\nimport MapWrapper from '../map/MapWrapper';\n\nFlowRouter.route('/', {\n\taction() {\n\t\tmount(MainLayout, {\n\t\t\tcontent: (<MapWrapper />)\n\t\t})\n\t}\n});\n"]}