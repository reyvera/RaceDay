{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","objectWithoutProperties","extends"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"google-map-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"GoogleMap"}]},{"source":"./MapMarkers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MapMarkers"}]},{"source":"./LatLngForm","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"LatLngForm"}]}],"exports":{"exported":["MapWrapper"],"specifiers":[{"kind":"local","local":"MapWrapper","exported":"default"}]}}},"options":{"filename":"/client/map/MapWrapper.jsx","filenameRelative":"/client/map/MapWrapper.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/map/MapWrapper.jsx.map","sourceFileName":"/client/map/MapWrapper.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"MapWrapper"},"ignored":false,"code":"var _extends;module.import('babel-runtime/helpers/extends',{\"default\":function(v){_extends=v}});\nvar _objectWithoutProperties;module.import('babel-runtime/helpers/objectWithoutProperties',{\"default\":function(v){_objectWithoutProperties=v}});\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});\nvar _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});\nvar _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});\nvar React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});\nvar TrackerReact;module.import('meteor/ultimatejs:tracker-react',{\"default\":function(v){TrackerReact=v}});\n\nvar GoogleMap;module.import('google-map-react',{\"default\":function(v){GoogleMap=v}});\nvar MapMarkers;module.import('./MapMarkers',{\"default\":function(v){MapMarkers=v}});\nvar LatLngForm;module.import('./LatLngForm',{\"default\":function(v){LatLngForm=v}});\n\nMarkers = new Mongo.Collection(\"markers\");\n\nvar MapWrapper = function (_TrackerReact) {\n\t_inherits(MapWrapper, _TrackerReact);\n\n\tfunction MapWrapper() {\n\t\t_classCallCheck(this, MapWrapper);\n\n\t\tvar _this = _possibleConstructorReturn(this, _TrackerReact.call(this));\n\n\t\t_this.state = {\n\t\t\tsubscription: {\n\t\t\t\tmarkers: Meteor.subscribe(\"userMarkers\")\n\t\t\t}\n\t\t};\n\t\treturn _this;\n\t}\n\n\tMapWrapper.prototype.componentDidMount = function () {\n\t\tfunction componentDidMount() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (navigator.geolocation) {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(function (position) {\n\t\t\t\t\t_this2.setState({\n\t\t\t\t\t\tcurrentRegion: {\n\t\t\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"No Yippee... :(\");\n\t\t\t}\n\t\t}\n\n\t\treturn componentDidMount;\n\t}();\n\n\tMapWrapper.prototype.componentWillUnmount = function () {\n\t\tfunction componentWillUnmount() {\n\t\t\tthis.state.subscription.markers.stop();\n\t\t}\n\n\t\treturn componentWillUnmount;\n\t}();\n\n\tMapWrapper.prototype.createMapOptions = function () {\n\t\tfunction createMapOptions() {\n\t\t\treturn {\n\t\t\t\tminZoomOverride: true,\n\t\t\t\tminZoom: 2\n\t\t\t};\n\t\t}\n\n\t\treturn createMapOptions;\n\t}();\n\n\tMapWrapper.prototype.markers = function () {\n\t\tfunction markers() {\n\t\t\treturn Markers.find().fetch();\n\t\t}\n\n\t\treturn markers;\n\t}();\n\n\tMapWrapper.prototype.render = function () {\n\t\tfunction render() {\n\t\t\tuserLocation = this.state.currentRegion;\n\t\t\tconsole.log(userLocation);\n\t\t\t// Map user markers in database to their own respective <MapMarkers /> tag.\n\t\t\tvar myPlaces = this.markers().map(function (marker) {\n\t\t\t\tvar coords = _objectWithoutProperties(marker, []);\n\n\t\t\t\treturn React.createElement(MapMarkers, _extends({ key: marker._id\n\t\t\t\t}, coords));\n\t\t\t});\n\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'mapWrapper' },\n\t\t\t\tReact.createElement(LatLngForm, null),\n\t\t\t\tReact.createElement(\n\t\t\t\t\tGoogleMap,\n\t\t\t\t\t{\n\t\t\t\t\t\tdefaultCenter: this.props.center,\n\t\t\t\t\t\tcenter: userLocation,\n\t\t\t\t\t\tdefaultZoom: this.props.zoom,\n\t\t\t\t\t\toptions: this.createMapOptions,\n\t\t\t\t\t\tbootstrapURLKeys: { key: 'AIzaSyAh3cQ8hG1PN_ZLLC_GYP0zWhDSsYD4Mbk' } },\n\t\t\t\t\tmyPlaces,\n\t\t\t\t\t{ userLocation: userLocation }\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn render;\n\t}();\n\n\treturn MapWrapper;\n}(TrackerReact(Component));\n\nexports.default=(MapWrapper);module.export();\n\n\nMapWrapper.propTypes = {\n\tcenter: PropTypes.any,\n\tzoom: PropTypes.number\n};\nMapWrapper.defaultProps = {\n\tcenter: [35.3428366, -119.1099741],\n\tzoom: 2\n};","ast":null,"map":{"version":3,"sources":["/client/map/MapWrapper.jsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAP,IAAe,SAAf,EAA0B,SAA1B,QAA0C,OAA1C;AACA,OAAO,YAAP,MAAyB,iCAAzB;;AAEA,OAAO,SAAP,MAAsB,kBAAtB;AACA,OAAO,UAAP,MAAuB,cAAvB;AACA,OAAO,UAAP,MAAuB,cAAvB;;AAEA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV;;IAEqB,U;;;AACnB,uBAAc;AAAA;;AAAA,+CACZ,wBADY;;AAGd,QAAK,KAAL,GAAa;AACZ,iBAAc;AACb,aAAS,OAAO,SAAP,CAAiB,aAAjB;AADI;AADF,GAAb;AAHc;AAQb;;sBAEF,iB;+BAAoB;AAAA;;AACnB,OAAG,UAAU,WAAb,EAA0B;AACzB,cAAU,WAAV,CAAsB,kBAAtB,CACC,UAAC,QAAD,EAAc;AACb,YAAK,QAAL,CAAc;AACb,qBAAe;AACT,YAAM,SAAS,MAAT,CAAgB,QADb;AAET,YAAK,SAAS,MAAT,CAAgB;AAFZ;AADF,MAAd;AAMA,KARF;AAUA,IAXD,MAWO;AACN,YAAQ,GAAR,CAAY,iBAAZ;AACA;AAED;;;;;sBAED,oB;kCAAuB;AACtB,QAAK,KAAL,CAAW,YAAX,CAAwB,OAAxB,CAAgC,IAAhC;AACA;;;;;sBAED,gB;8BAAmB;AAClB,UAAM;AACL,qBAAiB,IADZ;AAEH,aAAS;AAFN,IAAN;AAIA;;;;;sBAED,O;qBAAU;AACT,UAAO,QAAQ,IAAR,GAAe,KAAf,EAAP;AACA;;;;;sBAEA,M;oBAAS;AACT,kBAAe,KAAK,KAAL,CAAW,aAA1B;AACA,WAAQ,GAAR,CAAY,YAAZ;;AAEA,OAAM,WAAW,KAAK,OAAL,GAAe,GAAf,CAAmB,kBAAU;AAAA,QACnC,MADmC,4BACzB,MADyB;;AAG7C,WACC,oBAAC,UAAD,aAAY,KAAK,OAAO;AAAxB,OACU,MADV,EADD;AAIA,IAPgB,CAAjB;;AASA,UACC;AAAA;IAAA,EAAK,WAAU,YAAf;IACC,oBAAC,UAAD,OADD;IAEC;AAAC,cAAD;KAAA;AACC,qBAAe,KAAK,KAAL,CAAW,MAD3B;AAEC,cAAQ,YAFT;AAGC,mBAAa,KAAK,KAAL,CAAW,IAHzB;AAIC,eAAS,KAAK,gBAJf;AAKC,wBAAkB,EAAE,KAAK,yCAAP,EALnB;KAOE,QAPF;KAQE,EAAC,0BAAD;AARF;AAFD,IADD;AAeC;;;;;;EAxEqC,aAAa,SAAb,C;;eAAnB,U;;;AA2ErB,WAAW,SAAX,GAAuB;AACtB,SAAQ,UAAU,GADI;AAEtB,OAAM,UAAU;AAFM,CAAvB;AAIA,WAAW,YAAX,GAA0B;AACzB,SAAQ,CAAC,UAAD,EAAa,CAAC,WAAd,CADiB;AAEzB,OAAM;AAFmB,CAA1B","file":"/client/map/MapWrapper.jsx.map","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\n\nimport GoogleMap from 'google-map-react';\nimport MapMarkers from './MapMarkers';\nimport LatLngForm from './LatLngForm';\n\nMarkers = new Mongo.Collection(\"markers\");\n\nexport default class MapWrapper extends TrackerReact(Component) {\n  constructor() {\n    super();\n\n\t\tthis.state = {\n\t\t\tsubscription: {\n\t\t\t\tmarkers: Meteor.subscribe(\"userMarkers\")\n\t\t\t}\n\t\t}\n  }\n\n\tcomponentDidMount() {\n\t\tif(navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t(position) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcurrentRegion: {\n          \t\tlat:  position.coords.latitude,\n          \t\tlng: position.coords.longitude,\n        \t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.log(\"No Yippee... :(\")\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.subscription.markers.stop();\n\t}\n\n\tcreateMapOptions() {\n\t\treturn{\n\t\t\tminZoomOverride: true,\n    \tminZoom: 2,\n\t\t}\n\t}\n\n\tmarkers() {\n\t\treturn Markers.find().fetch();\n\t}\n\n  render() {\n\t\tuserLocation = this.state.currentRegion;\n\t\tconsole.log(userLocation);\n\t\t// Map user markers in database to their own respective <MapMarkers /> tag.\n\t\tconst myPlaces = this.markers().map(marker => {\n\t\t\tconst {...coords} = marker;\n\n\t\t\treturn (\n\t\t\t\t<MapMarkers key={marker._id}\n\t\t\t\t\t\t\t\t\t\t{...coords} />\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"mapWrapper\">\n\t\t\t\t<LatLngForm />\n\t\t\t\t<GoogleMap\n\t\t\t\t\tdefaultCenter={this.props.center}\n\t\t\t\t\tcenter={userLocation}\n\t\t\t\t\tdefaultZoom={this.props.zoom}\n\t\t\t\t\toptions={this.createMapOptions}\n\t\t\t\t\tbootstrapURLKeys={{ key: 'AIzaSyAh3cQ8hG1PN_ZLLC_GYP0zWhDSsYD4Mbk'}} >\n\n\t\t\t\t\t{myPlaces}\n\t\t\t\t\t{{userLocation}}\n\t\t\t\t</GoogleMap>\n\t\t\t</div>\n\t\t);\n  }\n}\n\nMapWrapper.propTypes = {\n\tcenter: PropTypes.any,\n\tzoom: PropTypes.number,\n};\nMapWrapper.defaultProps = {\n\tcenter: [35.3428366, -119.1099741],\n\tzoom: 2,\n};\n"]},"hash":"6d62c36e01bed958f5780e07d2d30cefd97a2023"}
