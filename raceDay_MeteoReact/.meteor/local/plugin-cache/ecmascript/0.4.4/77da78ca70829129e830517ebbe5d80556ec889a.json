{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"google-map-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"GoogleMap"}]},{"source":"./MapMarkers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MapMarkers"}]},{"source":"./LatLngForm","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"LatLngForm"}]}],"exports":{"exported":["MapWrapper"],"specifiers":[{"kind":"local","local":"MapWrapper","exported":"default"}]}}},"options":{"filename":"/client/map/MapWrapper.jsx","filenameRelative":"/client/map/MapWrapper.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/map/MapWrapper.jsx.map","sourceFileName":"/client/map/MapWrapper.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"MapWrapper"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});\nvar _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});\nvar _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});\nvar React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});\nvar TrackerReact;module.import('meteor/ultimatejs:tracker-react',{\"default\":function(v){TrackerReact=v}});\n\nvar GoogleMap;module.import('google-map-react',{\"default\":function(v){GoogleMap=v}});\nvar MapMarkers;module.import('./MapMarkers',{\"default\":function(v){MapMarkers=v}});\nvar LatLngForm;module.import('./LatLngForm',{\"default\":function(v){LatLngForm=v}});\n\nMarkers = new Mongo.Collection(\"markers\");\n\nvar MapWrapper = function (_TrackerReact) {\n\t_inherits(MapWrapper, _TrackerReact);\n\n\tfunction MapWrapper() {\n\t\t_classCallCheck(this, MapWrapper);\n\n\t\tvar _this = _possibleConstructorReturn(this, _TrackerReact.call(this));\n\n\t\t_this.state = {\n\t\t\tsubscription: {\n\t\t\t\tmarkers: Meteor.subscribe(\"userMarkers\")\n\t\t\t}\n\t\t};\n\t\treturn _this;\n\t}\n\n\tMapWrapper.prototype.componentWillUnmount = function () {\n\t\tfunction componentWillUnmount() {\n\t\t\tthis.state.subscription.markers.stop();\n\t\t}\n\n\t\treturn componentWillUnmount;\n\t}();\n\n\tMapWrapper.prototype.createMapOptions = function () {\n\t\tfunction createMapOptions() {\n\t\t\treturn {\n\t\t\t\tminZoomOverride: true,\n\t\t\t\tminZoom: 2\n\t\t\t};\n\t\t}\n\n\t\treturn createMapOptions;\n\t}();\n\n\tMapWrapper.prototype.markers = function () {\n\t\tfunction markers() {\n\t\t\treturn Markers.find().fetch();\n\t\t}\n\n\t\treturn markers;\n\t}();\n\n\tMapWrapper.prototype.render = function () {\n\t\tfunction render() {\n\t\t\tvar myLat = parseInt(this.markers().map(function (marker) {\n\t\t\t\treturn marker.userLat;\n\t\t\t}));\n\t\t\tvar myLng = this.markers().map(function (marker) {\n\t\t\t\treturn marker.userLng;\n\t\t\t});\n\n\t\t\tconsole.log(myLat);\n\t\t\tconsole.log(myLng);\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'mapWrapper' },\n\t\t\t\tReact.createElement(LatLngForm, null),\n\t\t\t\tReact.createElement(\n\t\t\t\t\tGoogleMap,\n\t\t\t\t\t{\n\t\t\t\t\t\tdefaultCenter: this.props.center,\n\t\t\t\t\t\tcenter: { lat: myLat, lng: myLng },\n\t\t\t\t\t\tdefaultZoom: this.props.zoom,\n\t\t\t\t\t\toptions: this.createMapOptions,\n\t\t\t\t\t\tbootstrapURLKeys: {\n\t\t\t\t\t\t\tkey: 'AIzaSyAh3cQ8hG1PN_ZLLC_GYP0zWhDSsYD4Mbk'\n\t\t\t\t\t\t} },\n\t\t\t\t\tReact.createElement(MapMarkers, { lat: 35.3428366, lng: -119.1099741, text: 'A' })\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'ul',\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.markers().map(function (marker) {\n\t\t\t\t\t\treturn \"Lat:\" + marker.userLat + \", Lng:\" + marker.userLng + \"; \";\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn render;\n\t}();\n\n\treturn MapWrapper;\n}(TrackerReact(Component));\n\nexports.default=(MapWrapper);module.export();\n\n\nMapWrapper.propTypes = {\n\tcenter: PropTypes.any,\n\tzoom: PropTypes.number\n};\nMapWrapper.defaultProps = {\n\tcenter: { lat: 59.938043, lng: 30.337157 },\n\tzoom: 15\n};","ast":null,"map":{"version":3,"sources":["/client/map/MapWrapper.jsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,IAAe,SAAf,EAA0B,SAA1B,QAA0C,OAA1C;AACA,OAAO,YAAP,MAAyB,iCAAzB;;AAEA,OAAO,SAAP,MAAsB,kBAAtB;AACA,OAAO,UAAP,MAAuB,cAAvB;AACA,OAAO,UAAP,MAAuB,cAAvB;;AAEA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV;;IAEqB,U;;;AACnB,uBAAc;AAAA;;AAAA,+CACZ,wBADY;;AAGd,QAAK,KAAL,GAAa;AACZ,iBAAc;AACb,aAAS,OAAO,SAAP,CAAiB,aAAjB;AADI;AADF,GAAb;AAHc;AAQb;;sBAEF,oB;kCAAuB;AACtB,QAAK,KAAL,CAAW,YAAX,CAAwB,OAAxB,CAAgC,IAAhC;AACA;;;;;sBAED,gB;8BAAmB;AAClB,UAAM;AACL,qBAAiB,IADZ;AAEH,aAAS;AAFN,IAAN;AAIA;;;;;sBAED,O;qBAAU;AACT,UAAO,QAAQ,IAAR,GAAe,KAAf,EAAP;AACA;;;;;sBAEA,M;oBAAS;AACT,OAAM,QAAQ,SAAS,KAAK,OAAL,GAAe,GAAf,CAAmB,UAAC,MAAD,EAAY;AACrD,WAAO,OAAO,OAAd;AACA,IAFsB,CAAT,CAAd;AAGA,OAAM,QAAQ,KAAK,OAAL,GAAe,GAAf,CAAmB,UAAC,MAAD,EAAY;AAC5C,WAAO,OAAO,OAAd;AACA,IAFa,CAAd;;AAIA,WAAQ,GAAR,CAAY,KAAZ;AACA,WAAQ,GAAR,CAAY,KAAZ;AACE,UACD;AAAA;IAAA,EAAK,WAAU,YAAf;IACC,oBAAC,UAAD,OADD;IAGC;AAAC,cAAD;KAAA;AACE,qBAAe,KAAK,KAAL,CAAW,MAD5B;AAEE,cAAQ,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EAFV;AAGE,mBAAa,KAAK,KAAL,CAAW,IAH1B;AAIE,eAAS,KAAK,gBAJhB;AAKE,wBAAkB;AAClB,YAAK;AADa,OALpB;KAQE,oBAAC,UAAD,IAAY,KAAK,UAAjB,EAA6B,KAAK,CAAC,WAAnC,EAAgD,MAAM,GAAtD;AARF,KAHD;IAaC;AAAA;KAAA;KACE,KAAK,OAAL,GAAe,GAAf,CAAmB,UAAC,MAAD,EAAY;AAC/B,aAAO,SAAS,OAAO,OAAhB,GAA0B,QAA1B,GAAqC,OAAO,OAA5C,GAAsD,IAA7D;AACA,MAFA;AADF;AAbD,IADC;AAqBD;;;;;;EAzDqC,aAAa,SAAb,C;;eAAnB,U;;;AA4DrB,WAAW,SAAX,GAAuB;AACtB,SAAQ,UAAU,GADI;AAEtB,OAAM,UAAU;AAFM,CAAvB;AAIA,WAAW,YAAX,GAA0B;AACzB,SAAQ,EAAC,KAAK,SAAN,EAAiB,KAAK,SAAtB,EADiB;AAEzB,OAAM;AAFmB,CAA1B","file":"/client/map/MapWrapper.jsx.map","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\n\nimport GoogleMap from 'google-map-react';\nimport MapMarkers from './MapMarkers';\nimport LatLngForm from './LatLngForm';\n\nMarkers = new Mongo.Collection(\"markers\");\n\nexport default class MapWrapper extends TrackerReact(Component) {\n  constructor() {\n    super();\n\n\t\tthis.state = {\n\t\t\tsubscription: {\n\t\t\t\tmarkers: Meteor.subscribe(\"userMarkers\")\n\t\t\t}\n\t\t}\n  }\n\n\tcomponentWillUnmount() {\n\t\tthis.state.subscription.markers.stop();\n\t}\n\n\tcreateMapOptions() {\n\t\treturn{\n\t\t\tminZoomOverride: true,\n    \tminZoom: 2,\n\t\t}\n\t}\n\n\tmarkers() {\n\t\treturn Markers.find().fetch();\n\t}\n\n  render() {\n\t\tconst myLat = parseInt(this.markers().map((marker) => {\n\t\t\treturn marker.userLat\n\t\t}));\n\t\tconst myLng = this.markers().map((marker) => {\n\t\t\treturn marker.userLng;\n\t\t});\n\n\t\tconsole.log(myLat);\n\t\tconsole.log(myLng);\n    return (\n\t\t\t<div className=\"mapWrapper\">\n\t\t\t\t<LatLngForm />\n\n\t\t\t\t<GoogleMap\n\t\t\t\t \tdefaultCenter={this.props.center}\n\t\t\t\t \tcenter={{lat: myLat, lng: myLng}}\n\t\t\t\t \tdefaultZoom={this.props.zoom}\n\t\t\t\t \toptions={this.createMapOptions}\n\t\t\t\t \tbootstrapURLKeys={{\n\t\t\t\t\t key: 'AIzaSyAh3cQ8hG1PN_ZLLC_GYP0zWhDSsYD4Mbk',\n\t\t\t\t \t}}>\n\t\t\t\t \t<MapMarkers lat={35.3428366} lng={-119.1099741} text={'A'} />\n\t\t\t \t</GoogleMap>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.markers().map((marker) => {\n\t\t\t\t\t\treturn \"Lat:\" + marker.userLat + \", Lng:\" + marker.userLng + \"; \"\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n    );\n  }\n}\n\nMapWrapper.propTypes = {\n\tcenter: PropTypes.any,\n\tzoom: PropTypes.number,\n};\nMapWrapper.defaultProps = {\n\tcenter: {lat: 59.938043, lng: 30.337157},\n\tzoom: 15,\n};\n"]},"hash":"77da78ca70829129e830517ebbe5d80556ec889a"}
